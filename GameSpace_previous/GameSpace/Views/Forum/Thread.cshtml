@{
    ViewData["Title"] = ViewBag.Thread.Title + " - 論壇";
    Layout = "_Layout";
    var thread = ViewBag.Thread as Thread;
    var posts = ViewBag.Posts as List<ThreadPost>;
}

<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@thread.Title - 論壇</title>
    <style>
        :root{
            --bg:#eef3f8; --bg2:#ffffff; --ink:#1f2937; --muted:#64748b; --line:#e5e7eb;
            --surface:rgba(255,255,255,.75); --glass:rgba(255,255,255,.45);
            --accent:#7557ff; --accent-2:#34d2ff; --accent-3:#22c55e;
            --radius:18px; --radius-sm:12px; --shadow:0 18px 40px rgba(17,24,39,.12);
            --blur:14px;
        }
        body.dark{
            --bg:#0c111b; --bg2:#0a0f18; --ink:#e5edff; --muted:#9fb1c9; --line:#1e2b43;
            --surface:rgba(22,30,48,.65); --glass:rgba(18,24,39,.50);
            --shadow:0 18px 42px rgba(0,0,0,.35);
        }
        *{box-sizing:border-box} html,body{height:100%}
        body{
            margin:0; color:var(--ink); font:16px/1.65 system-ui,-apple-system,"Segoe UI",Roboto,"Noto Sans TC","PingFang TC","Microsoft JhengHei",sans-serif;
            background:
                radial-gradient(900px 500px at -10% -10%, rgba(117,87,255,.10), transparent 60%),
                radial-gradient(800px 460px at 110% 10%, rgba(52,210,255,.10), transparent 50%),
                linear-gradient(180deg, var(--bg), var(--bg2));
        }
        .wrap{max-width:1000px; margin:0 auto; padding:0 16px}
        
        /* 討論串標題 */
        .thread-header{
            background:var(--glass); border:1px solid var(--line); border-radius:20px; 
            padding:30px; backdrop-filter:blur(var(--blur)); box-shadow:var(--shadow);
            margin:20px 0;
        }
        .thread-title{font-size:28px; font-weight:900; color:var(--ink); margin-bottom:15px; line-height:1.3}
        .thread-meta{display:flex; align-items:center; gap:20px; margin-bottom:20px; font-size:14px; color:var(--muted)}
        .meta-item{display:flex; align-items:center; gap:5px}
        .meta-value{font-weight:700; color:var(--ink)}
        
        .thread-content{
            background:var(--surface); border:1px solid var(--line); border-radius:15px;
            padding:25px; margin:20px 0; line-height:1.8; font-size:16px;
        }
        
        /* 回覆區域 */
        .replies-section{margin:30px 0}
        .replies-title{font-size:24px; font-weight:900; color:var(--ink); margin-bottom:20px}
        
        .reply-item{
            background:var(--glass); border:1px solid var(--line); border-radius:15px; 
            padding:20px; backdrop-filter:blur(var(--blur)); box-shadow:var(--shadow);
            margin:15px 0;
        }
        .reply-header{display:flex; align-items:center; gap:15px; margin-bottom:15px}
        .reply-avatar{width:40px; height:40px; border-radius:50%; background:linear-gradient(135deg,var(--accent),var(--accent-2)); display:flex; align-items:center; justify-content:center; font-size:18px; color:#fff}
        .reply-info{flex:1}
        .reply-author{font-weight:700; color:var(--ink); margin-bottom:5px}
        .reply-time{font-size:13px; color:var(--muted)}
        .reply-content{line-height:1.6; margin:10px 0}
        
        /* 回覆表單 */
        .reply-form{
            background:var(--glass); border:1px solid var(--line); border-radius:15px; 
            padding:25px; backdrop-filter:blur(var(--blur)); box-shadow:var(--shadow);
            margin:30px 0;
        }
        .form-title{font-size:20px; font-weight:900; color:var(--ink); margin-bottom:20px}
        .form-group{margin-bottom:20px}
        .form-label{display:block; font-weight:700; color:var(--ink); margin-bottom:8px}
        .form-control{
            width:100%; padding:12px 16px; border:2px solid var(--line); border-radius:12px;
            background:var(--surface); color:var(--ink); font-size:16px; resize:vertical;
            transition:border-color 0.3s ease;
        }
        .form-control:focus{outline:none; border-color:var(--accent)}
        .btn-reply{
            background:linear-gradient(135deg,var(--accent),#3b82f6); color:#fff; border:none;
            padding:12px 24px; border-radius:12px; font-weight:700; cursor:pointer;
            transition:all 0.3s ease; box-shadow:var(--shadow);
        }
        .btn-reply:hover{transform:translateY(-2px); box-shadow:0 8px 25px rgba(117,87,255,0.4)}
    </style>
</head>
<body>
    <div class="wrap">
        <!-- 討論串標題 -->
        <div class="thread-header">
            <h1 class="thread-title">@thread.Title</h1>
            <div class="thread-meta">
                <div class="meta-item">
                    <span>👤</span>
                    <span class="meta-value">@(thread.AuthorUser?.UserName ?? "匿名用戶")</span>
                </div>
                <div class="meta-item">
                    <span>📅</span>
                    <span class="meta-value">@thread.CreatedAt.ToString("yyyy/MM/dd HH:mm")</span>
                </div>
                <div class="meta-item">
                    <span>👀</span>
                    <span class="meta-value">@thread.ViewCount 瀏覽</span>
                </div>
                <div class="meta-item">
                    <span>💬</span>
                    <span class="meta-value">@thread.ReplyCount 回覆</span>
                </div>
            </div>
            <div class="thread-content">@Html.Raw(thread.Content.Replace("\n", "<br>"))</div>
        </div>
        
        <!-- 回覆區域 -->
        <div class="replies-section">
            <h2 class="replies-title">💬 回覆 (@posts.Count)</h2>
            
            @if (posts.Any())
            {
                @foreach (var post in posts)
                {
                    <div class="reply-item">
                        <div class="reply-header">
                            <div class="reply-avatar">@(post.AuthorUser?.UserName?.Substring(0, 1).ToUpper() ?? "?")</div>
                            <div class="reply-info">
                                <div class="reply-author">@(post.AuthorUser?.UserName ?? "匿名用戶")</div>
                                <div class="reply-time">@post.CreatedAt.ToString("yyyy/MM/dd HH:mm")</div>
                            </div>
                        </div>
                        <div class="reply-content">@Html.Raw(post.Content.Replace("\n", "<br>"))</div>
                    </div>
                }
            }
            else
            {
                <div style="text-align:center; padding:40px; color:var(--muted)">
                    <div style="font-size:48px; margin-bottom:20px">💭</div>
                    <div style="font-size:18px; font-weight:700; margin-bottom:10px; color:var(--ink)">暫無回覆</div>
                    <div>快來發表第一個回覆吧！</div>
                </div>
            }
        </div>
        
        <!-- 回覆表單 -->
        <div class="reply-form">
            <h3 class="form-title">✍️ 發表回覆</h3>
            <form id="replyForm">
                <div class="form-group">
                    <label class="form-label" for="content">回覆內容</label>
                    <textarea id="content" name="content" class="form-control" rows="5" placeholder="請輸入您的回覆內容..." required></textarea>
                </div>
                <button type="submit" class="btn-reply">發表回覆</button>
            </form>
        </div>
    </div>

    <script>
        document.getElementById('replyForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const content = document.getElementById('content').value.trim();
            if (!content) {
                alert('請輸入回覆內容');
                return;
            }
            
            fetch('/Forum/Reply', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    threadId: @thread.ThreadId,
                    content: content
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    location.reload();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                alert('回覆失敗，請稍後再試');
            });
        });
    </script>
</body>
</html>