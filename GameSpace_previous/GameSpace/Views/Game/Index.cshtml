@{
    ViewData["Title"] = "小遊戲 - GameSpace";
    Layout = "_Layout";
}

<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>小遊戲 - GameSpace</title>
    <style>
        :root{
            --bg:#eef3f8; --bg2:#ffffff; --ink:#1f2937; --muted:#64748b; --line:#e5e7eb;
            --surface:rgba(255,255,255,.75); --glass:rgba(255,255,255,.45);
            --accent:#7557ff; --accent-2:#34d2ff; --accent-3:#22c55e;
            --radius:18px; --radius-sm:12px; --shadow:0 18px 40px rgba(17,24,39,.12);
            --blur:14px;
        }
        body.dark{
            --bg:#0c111b; --bg2:#0a0f18; --ink:#e5edff; --muted:#9fb1c9; --line:#1e2b43;
            --surface:rgba(22,30,48,.65); --glass:rgba(18,24,39,.50);
            --shadow:0 18px 42px rgba(0,0,0,.35);
        }
        *{box-sizing:border-box} html,body{height:100%}
        body{
            margin:0; color:var(--ink); font:16px/1.65 system-ui,-apple-system,"Segoe UI",Roboto,"Noto Sans TC","PingFang TC","Microsoft JhengHei",sans-serif;
            background:
                radial-gradient(900px 500px at -10% -10%, rgba(117,87,255,.10), transparent 60%),
                radial-gradient(800px 460px at 110% 10%, rgba(52,210,255,.10), transparent 50%),
                linear-gradient(180deg, var(--bg), var(--bg2));
        }
        .wrap{max-width:1200px; margin:0 auto; padding:0 16px}
        
        /* 遊戲卡片 */
        .game-card{
            background:var(--glass); border:1px solid var(--line); border-radius:20px; 
            padding:30px; backdrop-filter:blur(var(--blur)); box-shadow:var(--shadow);
            text-align:center; margin:20px 0;
        }
        .game-title{font-size:32px; font-weight:900; margin-bottom:20px; color:var(--ink)}
        .game-subtitle{font-size:18px; color:var(--muted); margin-bottom:30px}
        
        /* 遊戲區域 */
        .game-area{
            background:var(--surface); border:2px solid var(--line); border-radius:15px;
            height:400px; position:relative; overflow:hidden; margin:20px 0;
        }
        .game-character{
            position:absolute; width:50px; height:50px; background:var(--accent);
            border-radius:50%; transition:all 0.1s ease; cursor:pointer;
            display:flex; align-items:center; justify-content:center; font-size:24px;
        }
        .game-target{
            position:absolute; width:30px; height:30px; background:var(--accent-3);
            border-radius:50%; animation:float 2s ease-in-out infinite;
        }
        @keyframes float{
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }
        
        /* 控制按鈕 */
        .game-controls{display:flex; gap:15px; justify-content:center; margin:20px 0}
        .btn-game{
            padding:15px 30px; border:none; border-radius:12px; font-weight:700; cursor:pointer;
            transition:all 0.3s ease; box-shadow:var(--shadow); font-size:16px;
        }
        .btn-start{background:linear-gradient(135deg,var(--accent),#3b82f6); color:#fff}
        .btn-end{background:linear-gradient(135deg,#ef4444,#dc2626); color:#fff}
        .btn-leaderboard{background:linear-gradient(135deg,#8b5cf6,#a855f7); color:#fff}
        .btn-game:hover{transform:translateY(-2px); box-shadow:0 8px 25px rgba(0,0,0,0.15)}
        .btn-game:disabled{opacity:0.5; cursor:not-allowed; transform:none}
        
        /* 遊戲資訊 */
        .game-info{display:grid; grid-template-columns:repeat(auto-fit, minmax(200px, 1fr)); gap:20px; margin:20px 0}
        .info-card{
            background:var(--surface); border:1px solid var(--line); border-radius:12px;
            padding:20px; text-align:center;
        }
        .info-title{font-size:14px; color:var(--muted); margin-bottom:5px}
        .info-value{font-size:24px; font-weight:900; color:var(--ink)}
        
        /* 排行榜 */
        .leaderboard{background:var(--glass); border:1px solid var(--line); border-radius:15px; padding:20px; margin:20px 0}
        .leaderboard-title{font-size:20px; font-weight:900; margin-bottom:15px; color:var(--ink)}
        .leaderboard-item{
            display:flex; align-items:center; gap:15px; padding:10px; 
            border-bottom:1px solid var(--line); transition:background 0.2s ease;
        }
        .leaderboard-item:hover{background:var(--surface)}
        .rank{width:30px; height:30px; border-radius:50%; display:flex; align-items:center; justify-content:center; font-weight:900; font-size:14px}
        .rank.gold{background:linear-gradient(135deg,#FFD700,#FFA500); color:#fff}
        .rank.silver{background:linear-gradient(135deg,#C0C0C0,#A0A0A0); color:#fff}
        .rank.bronze{background:linear-gradient(135deg,#CD7F32,#B8860B); color:#fff}
        .rank.normal{background:var(--surface); color:var(--muted); border:1px solid var(--line)}
        .player-name{flex:1; font-weight:700; color:var(--ink)}
        .player-score{font-weight:700; color:var(--accent)}
    </style>
</head>
<body>
    <div class="wrap">
        <div class="game-card">
            <h1 class="game-title">🎮 史萊姆冒險</h1>
            <p class="game-subtitle">點擊史萊姆收集寶石，挑戰最高分！</p>
            
            <div class="game-info">
                <div class="info-card">
                    <div class="info-title">今日遊戲次數</div>
                    <div class="info-value">@ViewBag.TodayGames / @ViewBag.MaxGames</div>
                </div>
                <div class="info-card">
                    <div class="info-title">當前分數</div>
                    <div class="info-value" id="currentScore">0</div>
                </div>
                <div class="info-card">
                    <div class="info-title">遊戲時間</div>
                    <div class="info-value" id="gameTime">0s</div>
                </div>
            </div>
            
            <div class="game-area" id="gameArea">
                <div class="game-character" id="character" style="left:50%; top:50%;">🐱</div>
            </div>
            
            <div class="game-controls">
                <button class="btn-game btn-start" id="startBtn" onclick="startGame()">開始遊戲</button>
                <button class="btn-game btn-end" id="endBtn" onclick="endGame()" disabled>結束遊戲</button>
                <button class="btn-game btn-leaderboard" onclick="showLeaderboard()">排行榜</button>
            </div>
        </div>
        
        <div class="leaderboard" id="leaderboard" style="display:none;">
            <h3 class="leaderboard-title">🏆 排行榜</h3>
            <div id="leaderboardList"></div>
        </div>
    </div>

    <script>
        let gameActive = false;
        let gameId = null;
        let score = 0;
        let startTime = null;
        let gameInterval = null;
        let targets = [];

        function startGame() {
            if (@ViewBag.TodayGames >= @ViewBag.MaxGames) {
                alert('今日遊戲次數已用完，明天再來吧！');
                return;
            }

            // 發送開始遊戲請求
            fetch('/Game/StartGame', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    gameId = data.gameId;
                    gameActive = true;
                    score = 0;
                    startTime = Date.now();
                    
                    document.getElementById('startBtn').disabled = true;
                    document.getElementById('endBtn').disabled = false;
                    
                    // 開始遊戲循環
                    gameInterval = setInterval(updateGame, 100);
                    createTarget();
                } else {
                    alert(data.message);
                }
            });
        }

        function endGame() {
            if (!gameActive) return;
            
            gameActive = false;
            clearInterval(gameInterval);
            
            const duration = Math.floor((Date.now() - startTime) / 1000);
            
            // 發送結束遊戲請求
            fetch('/Game/EndGame', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    gameId: gameId,
                    score: score,
                    duration: duration
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    location.reload(); // 重新載入頁面
                } else {
                    alert(data.message);
                }
            });
            
            document.getElementById('startBtn').disabled = false;
            document.getElementById('endBtn').disabled = true;
        }

        function updateGame() {
            if (!gameActive) return;
            
            // 更新遊戲時間
            const elapsed = Math.floor((Date.now() - startTime) / 1000);
            document.getElementById('gameTime').textContent = elapsed + 's';
            
            // 移動目標
            targets.forEach(target => {
                target.style.left = (parseInt(target.style.left) + Math.random() * 4 - 2) + 'px';
                target.style.top = (parseInt(target.style.top) + Math.random() * 4 - 2) + 'px';
            });
            
            // 隨機創建新目標
            if (Math.random() < 0.1) {
                createTarget();
            }
        }

        function createTarget() {
            const target = document.createElement('div');
            target.className = 'game-target';
            target.style.left = Math.random() * 90 + '%';
            target.style.top = Math.random() * 90 + '%';
            target.onclick = () => collectTarget(target);
            
            document.getElementById('gameArea').appendChild(target);
            targets.push(target);
            
            // 3秒後自動移除
            setTimeout(() => {
                if (target.parentNode) {
                    target.parentNode.removeChild(target);
                    targets = targets.filter(t => t !== target);
                }
            }, 3000);
        }

        function collectTarget(target) {
            score += 10;
            document.getElementById('currentScore').textContent = score;
            
            target.style.background = '#22c55e';
            target.style.transform = 'scale(1.5)';
            
            setTimeout(() => {
                if (target.parentNode) {
                    target.parentNode.removeChild(target);
                    targets = targets.filter(t => t !== target);
                }
            }, 200);
        }

        function showLeaderboard() {
            fetch('/Game/Leaderboard')
            .then(response => response.json())
            .then(data => {
                const list = document.getElementById('leaderboardList');
                list.innerHTML = '';
                
                data.forEach((item, index) => {
                    const div = document.createElement('div');
                    div.className = 'leaderboard-item';
                    
                    const rankClass = index < 3 ? ['gold', 'silver', 'bronze'][index] : 'normal';
                    const rankText = index < 3 ? ['🥇', '🥈', '🥉'][index] : (index + 1);
                    
                    div.innerHTML = `
                        <div class="rank ${rankClass}">${rankText}</div>
                        <div class="player-name">${item.userName}</div>
                        <div class="player-score">${item.score} 分</div>
                    `;
                    
                    list.appendChild(div);
                });
                
                document.getElementById('leaderboard').style.display = 'block';
            });
        }

        // 添加請求驗證令牌
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.createElement('form');
            form.style.display = 'none';
            form.innerHTML = '@Html.AntiForgeryToken()';
            document.body.appendChild(form);
        });
    </script>
</body>
</html>